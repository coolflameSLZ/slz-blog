#---------------------------
# Hexo Theme Fluid
# Author: Fluid-dev
# Github: https://github.com/fluid-dev/hexo-theme-fluid
#
# 配置指南: https://hexo.fluid-dev.com/docs/guide/
# 你可以从指南中获得更详细的说明
#
# Guide: https://hexo.fluid-dev.com/docs/en/guide/
# You can get more detailed help from the guide
#---------------------------


#---------------------------
# 全局
# Global
#---------------------------

# 用于浏览器标签的图标
favicon: /img/favicon.png

# 用于苹果设备的图标
apple_touch_icon: /img/favicon.png

# 浏览器标签页中的标题分隔符，效果： 文章名 - 站点名
tab_title_separator: " - "

# 强制所有链接升级为 HTTPS（适用于图片等资源出现 HTTP 混入报错）
force_https: false

# 代码块的增强配置
code:
  # 是否开启复制代码的按钮
  copy_btn: true

  # 代码高亮
  highlight:
    enable: true
    # 代码块是否显示行号
    line_number: true

    # 实现高亮的库，对应下面的设置
    # Options: highlightjs | prismjs
    lib: "highlightjs"

    highlightjs:
      # 在链接中挑选 style 填入 https://highlightjs.org/static/demo/
      style: "Github Gist"
      # 是否根据 style 改变代码背景色（如果 style 是深色背景别忘了开启此项）
      bg_color: true

    prismjs:
      # 在下方链接页面右侧的圆形按钮挑选 style 填入，也可以直接填入 css 链接 See: https://prismjs.com/
      style: "default"
      # 设为 true 高亮将本地静态生成（并只支持部分 prismjs 插件），设为 false 高亮将在浏览器通过 js 生成
      preprocess: true

# 一些好玩的功能
fun_features:
  # 为 subtitle 添加打字机效果
  typing:
    enable: true
    # 打印速度，数字越大越慢
    typeSpeed: 160
    # 游标字符
    cursorChar: "_"
    # 是否循环播放效果
    loop: false

  # 为文章内容中的标题添加锚图标
  anchorjs:
    enable: true
    element: h1,h2,h3,h4,h5,h6
    placement: right
    # Options: hover | always | touch
    visible: hover
    # Option：§ | # | ❡
    icon: ""

  # 加载进度条
  progressbar:
    enable: true
    height_px: 3
    color: "#29d"
    # See: https://github.com/rstacruz/nprogress
    options: { showSpinner: false, trickleSpeed: 100 }

# 主题暗色模式，开启后菜单中会出现切换按钮，用户浏览器会存储切换选项，并且会遵循 prefers-color-scheme 自动切换
dark_mode:
  enable: true
  # 默认的选项（当用户手动切换后则不再按照默认模式），选择 `auto` 会优先遵循 prefers-color-scheme，其次按用户本地时间 18 点到次日 6 点之间进入暗色模式
  # Options: auto | light | dark
  default: light

# 主题颜色配置，其他不生效的地方请使用自定义 css 解决，配色可以在下方链接中获得启发
# Theme color, please use custom CSS to solve other colors, color schema can be inspired by the links below
# See: https://www.webdesignrankings.com/resources/lolcolors/
color:
  # body 背景色
  # Color of body background
  body_bg_color: "#eee"
  # 暗色模式下的 body 背景色，下同
  # Color in dark mode, the same below
  body_bg_color_dark: "#181c27"

  # 顶部菜单背景色
  # Color of navigation bar background
  navbar_bg_color: "#F0CF55"
  navbar_bg_color_dark: "#F0CF55"

  # 顶部菜单字体色
  # Color of navigation bar text
  navbar_text_color: "#000000"
  navbar_text_color_dark: "#000000"

  # 全局字体色
  # Color of global text
  text_color: "#3c4858"
  text_color_dark: "#c4c6c9"

  # 全局次级字体色（摘要、简介等位置）
  # Color of global secondary text (excerpt, introduction, etc.)
  sec_text_color: "#718096"
  sec_text_color_dark: "#a7a9ad"

  # 文章正文字体色
  # Color of post text
  post_text_color: "#2c3e50"
  post_text_color_dark: "#c4c6c9"

  # 文章正文字体色（h1 h2 h3...）
  # Color of Article heading (h1 h2 h3...)
  post_heading_color: "#1a202c"
  post_heading_color_dark: "#c4c6c9"

  # 文章超链接字体色
  # Color of post link
  post_link_color: "#0366d6"
  post_link_color_dark: "#1589e9"

  # 超链接悬浮时字体色
  # Color of link when hovering
  link_hover_color: "#30a9de"
  link_hover_color_dark: "#30a9de"

  # 超链接悬浮背景色
  # Color of link background when hovering
  link_hover_bg_color: "#f8f9fa"
  link_hover_bg_color_dark: "#364151"

  # 主面板背景色
  # Color of main board
  board_color: "#fff"
  board_color_dark: "#252d38"

# 主题字体配置
# Font
font:
  font_size: 16px
  font_family:
  code_font_size: 85%


# 指定自定义 .js 文件路径，支持列表；路径是相对 source 目录，如 /js/custom.js 对应存放目录 source/js/custom.js
custom_js:

# 指定自定义 .css 文件路径，用法和 custom_js 相同
custom_css:

# 自定义 <head> 节点中的 HTML 内容
custom_head: ''

# 自定义底部 HTML 内容（位于 footer 上方），注意不要和 `post: custom` 配置冲突
custom_html: ''


# 对页面中的图片和评论插件进行懒加载处理，可见范围外的元素不会提前加载
lazyload:
  enable: true
  # 加载时的占位图片
  loading_img: /img/loading.gif
  # 开启后懒加载仅在文章页生效，如果自定义页面需要使用，可以在 Front-matter 里指定 `lazyload: true`
  onlypost: false
  # 触发加载的偏移倍数，基数是视窗高度，可根据部署环境的请求速度调节
  offset_factor: 2

# 图标库，包含了大量社交类图标，主题依赖的不包含在内，因此可自行修改，详见 https://hexo.fluid-dev.com/docs/icon/
iconfont: //at.alicdn.com/t/font_1736178_kmeydafke9r.css


#---------------------------
# 页头
# Header
#---------------------------

# 导航栏的相关配置
navbar:
  # 导航栏左侧的标题，为空则按 hexo config 中 `title` 显示
  blog_title: "中委会"

  # 导航栏毛玻璃特效，实验性功能，可能会造成页面滚动掉帧和抖动，部分浏览器不支持会自动不生效
  ground_glass:
    enable: false
    # 模糊像素，只能为数字，数字越大模糊度越高
    px: 100
    # 不透明度，数字越大透明度越低，注意透明过度可能看不清菜单字体 # available: 0 - 1.0
    alpha: 0

  # 导航栏菜单，可自行增减，key 用来关联 languages/*.yml，如不存在关联则显示 key 本身的值；icon 是 css class，可以省略；增加 name 可以强制显示指定名称
  menu:
    - { key: "home", link: "/", icon: "iconfont icon-home-fill" }
    - { key: "archive", link: "/archives/", icon: "iconfont icon-archive-fill" }
    - { key: "category", link: "/categories/", icon: "iconfont icon-category-fill" }
    - { key: "tag", link: "/tags/", icon: "iconfont icon-tags-fill" }
    - { key: "about", link: "/about/", icon: "iconfont icon-user-fill" }
    #- { key: "links", link: "/links/", icon: "iconfont icon-link-fill" }

# 搜索功能，基于 hexo-generator-search 插件，若已安装其他搜索插件请关闭此功能，以避免生成多余的索引文件
search:
  enable: true
  # 搜索索引文件的路径，可以是相对路径或外站的绝对路径
  path: /local-search.xml
  # 文件生成在本地的位置，必须是相对路径
  generate_path: /local-search.xml
  # 搜索的范围 # Options: post | page | all
  field: post
  # 搜索是否扫描正文
  content: true

# 首屏图片的相关配置
banner:
  # 视差滚动，图片与板块会随着屏幕滚动产生视差效果
  parallax: true
  # 图片最小的宽高比，以免图片两边被过度裁剪，适用于移动端竖屏时，如需关闭设为 0
  width_height_ratio: 1.0

# 向下滚动的箭头
scroll_down_arrow:
  enable: true
  # 头图高度不小于指定比例，才显示箭头 # Available: 0 - 100
  banner_height_limit: 80
  # 翻页后自动滚动
  scroll_after_turning_page: true

# 向顶部滚动的箭头
scroll_top_arrow:
  enable: true


#---------------------------
# 页脚
# Footer
#---------------------------
footer:
  # 页脚第一行文字的 HTML，建议保留 Fluid 的链接，用于向更多人推广本主题
  content: ''
#  content: '
#    <a href="https://hexo.io" target="_blank" rel="nofollow noopener"><span>Hexo</span></a>
#    <i class="iconfont icon-love"></i>
#    <a href="https://github.com/fluid-dev/hexo-theme-fluid" target="_blank" rel="nofollow noopener"><span>Fluid</span></a>
#  '

  # 展示网站的 PV、UV 统计数
  statistics:
    enable: false
    # 统计数据来源，使用 leancloud 需要设置 `web_analytics: leancloud` 中的参数；使用 busuanzi 不需要额外设置，但是有时不稳定，另外本地运行时 busuanzi 显示统计数据很大属于正常现象，部署后会正常 # Options: busuanzi | leancloud
    source: "busuanzi"
    # 页面显示的文本，{}是数字的占位符（必须包含)，下同
    pv_format: "总访问量 {} 次"
    uv_format: "总访客数 {} 人"

  # 国内大陆服务器的备案信息
  beian:
    enable: false
    # ICP证号
    icp_text: 京ICP证123456号
    # 公安备案号，不填则只显示ICP
    police_text: 京公网安备12345678号
    # 公安备案的编号，用于URL跳转查询
    police_code: 12345678
    # 公安备案的图片. 为空时不显示备案图片
    police_icon: /img/police_beian.png


#---------------------------
# 首页
# Home Page
#---------------------------
index:
  # 首页 Banner 头图，可以是相对路径或绝对路径，以下相同
#   banner_img: 'https://cdn.jsdelivr.net/gh/coolflameSLZ/img/img20210730103520.png'
  banner_img: 'https://cdn.jsdelivr.net/gh/coolflameSLZ/img/img20210730105027.png'
  # 头图高度，屏幕百分比 # Available: 0 - 100
  banner_img_height: 35
  # 头图黑色蒙版的不透明度，available: 0 - 1.0， 1 是完全不透明 # Available: 0 - 1.0
  banner_mask_alpha: 0.05

  # 首页副标题的独立设置
  slogan:
    enable: true
    # 为空则按 hexo config.subtitle 显示
    text: " 说  学  逗  唱"
    # 通过 API 接口作为首页副标题的内容，必须返回的是 JSON 格式，如果请求失败则按 text 字段显示，该功能必须先开启 typing 打字机功能
    api:
      enable: false
      # 请求地址
      url: ""
      # 请求方法 # Available: GET | POST | PUT
      method: "GET"
      # 请求头
      headers: { }
      # 从请求结果获取字符串的取值字段，最终必须是一个字符串，例如返回结果为 {"data": {"author": "fluid", "content": "An elegant theme"}}, 则取值字段为 ['data', 'content']；如果返回是列表则自动选择第一项
      keys: [ ]


  # 自动截取文章摘要
  auto_excerpt:
    enable: false

  # 打开文章的标签方式 # Available: _blank | _self
  post_url_target: _blank

  # 是否显示文章信息（时间、分类、标签）
  post_meta:
    date: true
    category: true
    tag: true

  # 文章通过 sticky 排序后，在首页文章标题前显示图标
  post_sticky:
    enable: true
    icon: "iconfont icon-top"

#---------------------------
# 文章页
# Post Page
#---------------------------
post:
  banner_img: 'https://cdn.jsdelivr.net/gh/coolflameSLZ/img/img20210730103638.png'
  # 头图高度，屏幕百分比 # Available: 0 - 100
  banner_img_height: 35
  # 头图黑色蒙版的不透明度，available: 0 - 1.0， 1 是完全不透明 # Available: 0 - 1.0
  banner_mask_alpha: 0.05

  # 文章在首页的默认封面图，当没有指定 index_img 时会使用该图片，若两者都为空则不显示任何图片
  default_index_img:

  # 文章标题下方的元信息
  meta:
    # 作者，优先根据 front-matter 里 author 字段，其次是 hexo 配置中 author 值
    author:
      enable: false

    # 文章日期，优先根据 front-matter 里 date 字段，其次是 md 文件日期
    date:
      enable: true
      # 格式参照 ISO-8601 日期格式化  # See: http://momentjs.cn/docs/#/parsing/string-format/
      format: "LL a"

    # 字数统计
    wordcount:
      enable: true
      # 显示的文本，{}是数字的占位符（必须包含)，下同
      format: "{} 字"

    # 估计阅读全文需要的时长
    min2read:
      enable: true
      format: "{} 分钟"
      # 每分钟阅读多少字，如果是技术文章，建议降低
      words: 80

    # 浏览量计数
    views:
      enable: false
      # 统计数据来源 # Options: busuanzi | leancloud
      source: "busuanzi"
      format: "{} 次"

  # 在文章开头显示文章更新时间，该时间默认是 md 文件更新时间，可通过 front-matter 中 `updated` 手动指定（和 date 一样格式）
  updated:
    enable: false
    # 描述文字
    content: 本文最后更新于：
    # 是否使用相对时间表示，比如："3 天前"
    relative: false

  # 文章右侧目录
  toc:
    enable: true
    # 目录会选择这些节点作为标题
    headingSelector: "h1,h2,h3,h4,h5,h6"
    # 层级的折叠深度，0 是全部折叠，大于 0 后如果存在下级标题则默认展开
    collapseDepth: 4

  # 版权声明，会显示在每篇文章的结尾
  copyright:
    enable: true
    content: '本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-sa/4.0/deed.zh" rel="nofollow noopener">CC BY-SA 4.0 协议</a> ，转载请注明出处！'

  # 文章底部上一篇下一篇功能
  prev_next:
    enable: true

  # 文章底部自定义区域（位于 footer 上方），支持 HTML，可插入赞赏码、公众号这类内容内容
  custom:
    enable: false
    content: '<img src="https://octodex.github.com/images/jetpacktocat.png" class="rounded mx-auto d-block mt-5" style="width:150px; height:150px;">'

  # 文章图片可点击放大
  image_zoom:
    enable: true
    # 放大后图片链接替换规则，可用于将压缩图片链接替换为原图片链接，如 ['-slim', ''] 是将链接中 `-slim` 移除；如果想使用正则请使用 `re:` 前缀，如 ['re:\\d{3,4}\\/\\d{3,4}\\/', '']
    img_url_replace: [ '', '' ]

  # 脚注语法，会在文章底部生成脚注，如果 Markdown 渲染器本身支持，则建议关闭，否则可能会冲突
  footnote:
    enable: true
    # 脚注的节标题，也可以在 front-matter 中通过 `footnote: <h2>Reference</h2>` 这种形式修改单独页面的 header
    header: ''

  # 数学公式，开启之前需要更换 Markdown 渲染器，否则复杂公式会有兼容问题，具体请见：https://hexo.fluid-dev.com/docs/guide/##latex-数学公式
  math:
    # 开启后文章默认可用，自定义页面如需使用，需在 Front-matter 中指定 `math: true`
    enable: true
    # 开启后，只有在文章 Front-matter 里指定 `math: true` 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度
    specific: true
    # Options: mathjax | katex
    engine: mathjax

  # 流程图，基于 mermaid-js，具体请见：https://hexo.fluid-dev.com/docs/guide/#mermaid-流程图
  mermaid:
    # 开启后文章默认可用，自定义页面如需使用，需在 Front-matter 中指定 `mermaid: true`
    enable: true
    # 开启后，只有在文章 Front-matter 里指定 `mermaid: true` 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度
    specific: true
    # See: http://mermaid-js.github.io/mermaid/
    options: { theme: 'default' }

#---------------------------
# 归档页
# Archive Page
#---------------------------
archive:
  banner_img: 'https://cdn.jsdelivr.net/gh/coolflameSLZ/img/img20210730103638.png'
  # 头图高度，屏幕百分比 # Available: 0 - 100
  banner_img_height: 35
  # 头图黑色蒙版的不透明度，available: 0 - 1.0， 1 是完全不透明 # Available: 0 - 1.0
  banner_mask_alpha: 0.05
  subtitle:


#---------------------------
# 分类页
# Category Page
#---------------------------
category:
  enable: true
  banner_img: 'https://cdn.jsdelivr.net/gh/coolflameSLZ/img/img20210730103638.png'
  # 头图高度，屏幕百分比 # Available: 0 - 100
  banner_img_height: 35
  # 头图黑色蒙版的不透明度，available: 0 - 1.0， 1 是完全不透明 # Available: 0 - 1.0
  banner_mask_alpha: 0.05
  subtitle:

  # 分类的排序字段，前面带减号是倒序，不带减号是正序
  # Options: length | name
  order_by: "-name"
  # 层级的折叠深度，0 是全部折叠，大于 0 后如果存在子分类则默认展开
  collapse_depth: 10
  # 文章的排序字段，前面带减号是倒序，不带减号是正序 # Options: date | title | or other field of front-matter
  post_order_by: "sortn"
  # 单个分类中折叠展示文章数的最大值，超过限制会显示 More，0 则不限制
  post_limit: 10


#---------------------------
# 标签页
# Tag Page
#---------------------------
tag:
  enable: true
  banner_img: 'https://cdn.jsdelivr.net/gh/coolflameSLZ/img/img20210730103638.png'
  # 头图高度，屏幕百分比 # Available: 0 - 100
  banner_img_height: 35
  # 头图黑色蒙版的不透明度，available: 0 - 1.0， 1 是完全不透明 # Available: 0 - 1.0
  banner_mask_alpha: 0.05
  subtitle:
  tagcloud:
    min_font: 15
    max_font: 30
    unit: px
    start_color: "#BBBBEE"
    end_color: "#337ab7"


#---------------------------
# 关于页
# About Page
#---------------------------
about:
  enable: true
  banner_img: 'https://cdn.jsdelivr.net/gh/coolflameSLZ/img/img20210730103638.png'
  # 头图高度，屏幕百分比 # Available: 0 - 100
  banner_img_height: 35
  # 头图黑色蒙版的不透明度，available: 0 - 1.0， 1 是完全不透明 # Available: 0 - 1.0
  banner_mask_alpha: 0.05
  subtitle:
  avatar: /img/avatar.png
  name: "Fluid"
  intro: "An elegant theme for Hexo"
  # 更多图标可从 https://hexo.fluid-dev.com/docs/icon/ 查找，`class` 代表图标的 css class，添加 `qrcode` 后，图标不再是链接而是悬浮二维码
  icons:
    - { class: "iconfont icon-github-fill", link: "https://github.com", tip: "GitHub" }
    - { class: "iconfont icon-douban-fill", link: "https://douban.com", tip: "豆瓣" }
    - { class: "iconfont icon-wechat-fill", qrcode: "/img/favicon.png" }


#---------------------------
# 自定义页
# Custom Page
#
# 通过 hexo new page 命令创建的页面
# Custom Page through `hexo new page`
#---------------------------
page:
  banner_img: 'https://cdn.jsdelivr.net/gh/coolflameSLZ/img/img20210730103638.png'
  # 头图高度，屏幕百分比 # Available: 0 - 100
  banner_img_height: 35
  # 头图黑色蒙版的不透明度，available: 0 - 1.0， 1 是完全不透明 # Available: 0 - 1.0
  banner_mask_alpha: 0.05


#---------------------------
# 404页
# 404 Page
#---------------------------
page404:
  enable: true
  banner_img: /img/home_banner.png
  # 头图高度，屏幕百分比 # Available: 0 - 100
  banner_img_height: 35
  # 头图黑色蒙版的不透明度，available: 0 - 1.0， 1 是完全不透明 # Available: 0 - 1.0
  banner_mask_alpha: 0.05
  subtitle: "Page not found"


#---------------------------
# 以下是配置 JS CSS 等静态资源的 URL 前缀，可以自定义成 CDN 地址，
# 默认的 jsDelivr CDN 可能在部分地区无法访问，如果需要修改，最好使用与默认配置相同的版本，以避免潜在的问题，
# ** 如果你不知道如何设置，请不要做任何改动 **
#---------------------------

static_prefix:
  # 内部静态
  internal_js: /js
  internal_css: /css
  internal_img: /img

  anchor: https://cdn.jsdelivr.net/npm/anchor-js@4.3.1/

  github_markdown: https://cdn.jsdelivr.net/npm/github-markdown-css@4.0.0/

  jquery: https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/

  bootstrap: https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/

  highlightjs: https://cdn.jsdelivr.net/npm/highlight.js@10.7.2/

  prismjs: https://cdn.jsdelivr.net/npm/prismjs@1.23.0/

  tocbot: https://cdn.jsdelivr.net/npm/tocbot@4.12.3/dist/

  typed: https://cdn.jsdelivr.net/npm/typed.js@2.0.12/lib/

  fancybox: https://cdn.jsdelivr.net/npm/@fancyapps/fancybox@3.5.7/dist/

  nprogress: https://cdn.jsdelivr.net/npm/nprogress@0.2.0/

  mathjax: https://cdn.jsdelivr.net/npm/mathjax@3.1.4/es5/

  katex: https://cdn.jsdelivr.net/npm/katex@0.13.10/dist/

  busuanzi: https://busuanzi.ibruce.info/busuanzi/2.3/

  clipboard: https://cdn.jsdelivr.net/npm/clipboard@2.0.8/dist/

  mermaid: https://cdn.jsdelivr.net/npm/mermaid@8.10.1/dist/

  valine: https://cdn.jsdelivr.net/npm/valine@1.4.14/dist/

  waline: https://cdn.jsdelivr.net/npm/@waline/client@0.16.2/dist/

  gitalk: https://cdn.jsdelivr.net/npm/gitalk@1.7.2/dist/

  disqusjs: https://cdn.jsdelivr.net/npm/disqusjs@1.3.0/dist/

  twikoo: https://cdn.jsdelivr.net/npm/twikoo@1.3.1/dist/

  hint: /lib/hint/